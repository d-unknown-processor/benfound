pokemonGoTweetCorpus[1]
(pokemonGoTweetCorpus[1])$
(pokemonGoTweetCorpus[1])
pokemonGoTweetCorpus[[1]]
pokemonGoTweetCorpus[[1]]$content
pokemonGoTweetCorpus[[1]]$metadata
pokemonGoTweetCorpus[[1]]
pokemonGoTweetCorpus[[1]]$meta
pokemonGoTweetCorpus
pokemonGoTweetTermDocumentMatrix[[1]]
pokemonGoTweetTermDocumentMatrix[[1,1]]
pokemonGoTweetTermDocumentMatrix[[1]][[1]]
pokemonGoTweetTermDocumentMatrix[[1]]
pokemonGoTweetTermDocumentMatrix[[1]]
simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2))
simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2))
library(slam)
simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2))
print(simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2)))
as.matrix(simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2)))
as.matrix(simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2)),nrow=2)
as.matrix(simple_triplet_matrix(c(1, 4), c(1, 2), c(1, 2)))
x <- matrix(c(1, 0, 0, 2), nrow = 2)
s <- as.simple_triplet_matrix(x)
as.matrix(s)
as.matrix(simple_triplet_matrix(c(1, 1)))
as.matrix(simple_triplet_matrix(c(1, 1),c(2, 2),c(3, 3)))
pokemonGoTweetTermDocumentMatrixNative <- as.matrix(pokemonGoTweetTermDocumentMatrix)
remove(pokemonGoTweetTermDocumentMatrixNative)
pokemonGoTweetTermDocumentMatrix
head(pokemonGoTweetTermDocumentMatrix[[1]])
length(pokemonGoTweetTermDocumentMatrix[[1]])
length(pokemonGoTweetTermDocumentMatrix[[1,1]])
length(pokemonGoTweetTermDocumentMatrix[[1]][[1]])
length(pokemonGoTweetTermDocumentMatrix[[2]][[2]])
length(pokemonGoTweetTermDocumentMatrix[[2]][[2]])
for(i in 1:100){ for(j in 1:100){ if(length(pokemonGoTweetTermDocumentMatrix[[2]][[2]])>1){print(i); print(j);};}}
for(i in 1:100){ for(j in 1:100){ if(length(pokemonGoTweetTermDocumentMatrix[[i]][[j]])>1){print(i); print(j);};}}
length(pokemonGoTweetTermDocumentMatrix[[2]])
length(pokemonGoTweetTermDocumentMatrix[[100]])
length(pokemonGoTweetTermDocumentMatrix[[3]])
length(pokemonGoTweetTermDocumentMatrix[[50]])
length(pokemonGoTweetTermDocumentMatrix[[4]])
length(pokemonGoTweetTermDocumentMatrix[[5]])
length(pokemonGoTweetTermDocumentMatrix[[6]])
length(pokemonGoTweetTermDocumentMatrix[[7]])
length(pokemonGoTweetTermDocumentMatrix[[7]])
length(pokemonGoTweetCorpus)
pokemonGoTweetTermDocumentMatrix[[3]][[1]]
pokemonGoTweetTermDocumentMatrix[[3]][[2]]
pokemonGoTweetTermDocumentMatrix[[3]][[3]]
pokemonGoTweetTermDocumentMatrix[[3]][[300]]
pokemonGoTweetTermDocumentMatrix[[3]][[3000]]
pokemonGoTweetTermDocumentMatrix[[3]][[30000]]
pokemonGoTweetTermDocumentMatrix[[3]][[40000]]
max(pokemonGoTweetTermDocumentMatrix[[3]])
max(pokemonGoTweetTermDocumentMatrix[[2]])
max(pokemonGoTweetTermDocumentMatrix[[1]])
q()
y
source('load.R')
max(pokemonGoTweetTermDocumentMatrix[[3]])
length(pokemonGoTweetTermDocumentMatrix[[3]])
pokemonTweetTermDocumentMatrixNnz <- length(pokemonGoTweetTermDocumentMatrix[[3]])
head(pokemonTweetUserIds)
pokemonGoTweetCorpus <- Corpus(VectorSource(as.character(pokemonTweets)))
pokemonUserTweetsDf <- data.frame
pokemonTweets[1]
as.character(pokemonTweets[1]) + as.character(pokemonTweets[2])
paste(c(as.character(pokemonTweets[1:2])),sep=" ")
paste(c(as.character(pokemonTweets[1:2])),sep=" ",collapse=" ")
pokemonUserTweetsDf <- data.frame(tweets=c()); for(userid in pokemonTweetUserIds){ tweetIndicesForUser <- which(pokemon}
pokemonTweets <- pokemonGODF[,9]
pokemonUserTweetsDf <- data.frame(tweets=c()); for(userid in pokemonTweetUserIds){ tweetIndicesForUser <- which(pokemon}
length(pokemonTweetUserIds)
pokemonTweetUserIdsUnique <- unique(pokemonTweetUserIds)
length(pokemonTweetUserIdsUnique)
pokemonUserTweetsDf <- data.frame(tweets=c()); for(userid in pokemonTweetUserIdsUnique){ tweetIndicesForUser <- which(pokemonTweetUserIds==}
head(pokemonTweetUserIds)
which(pokemonTweetUserIds==2426837520)
which(pokemonTweetUserIds==1604709822)
pokemonUserTweets <- c(); for(userid in pokemonTweetUserIdsUnique){ tweetIndicesForUser <- which(pokemonTweetUserIds==userid); pokemonUserTweets <- c(pokemonUserTweets, paste(as.character(pokemonTweets[tweetIndicesForUser]),sep=" ",collapse=" "));}
length(pokemonUserTweets)
pokemonUserTweets[1]
pokemonGoTweetCorpus <- Corpus(VectorSource(as.character(pokemonTweets)))
pokemonGoTweetCorpus <- Corpus(VectorSource(as.character(pokemonUserTweets)))
remove(pokemonGoTweetTermDocumentMatrixNative)
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, content_transformer(tolower))
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, removePunctuation)
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, removeWords,c(stopwords("english"),"prolife","prochoice"))\
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, removeWords,c(stopwords("english"),"prolife","prochoice"))
pokemonGoTweetTermDocumentMatrix <- TermDocumentMatrix(pokemonGoTweetCorpus)
length(pokemonGoTweetTermDocumentMatrix[[1]])
max(pokemonGoTweetTermDocumentMatrix[[1]])
max(pokemonGoTweetTermDocumentMatrix[[2]])
head(pokemonGoTweetTermDocumentMatrix[[2]])
head(pokemonGoTweetTermDocumentMatrix[[1]])
head(pokemonGoTweetTermDocumentMatrix[[2]],n=100)
length(unique(pokemonGoTweetTermDocumentMatrix[[1]]))
length(unique(pokemonGoTweetTermDocumentMatrix[[2]]))
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); write("\n","/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=T); }
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); }
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); write("","/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=T); }
pokemonGoTweetTermDocumentMatrix$meta
pokemonGoTweetTermDocumentMatrix$
inspect(pokemonGoTweetTermDocumentMatrix)
head(pokemonGoTweetTermDocumentMatrix$terms)
head(pokemonGoTweetTermDocumentMatrix$meta)
inspect(pokemonGoTweetTermDocumentMatrix[1:10,1:10])
rownames(pokemonGoTweetTermDocumentMatrix[1:10,1:10])
pokemonGoTweetVocabulary <- rownames(pokemonGoTweetTermDocumentMatrix)
length(pokemonGoTweetVocabulary)
max(pokemonGoTweetTermDocumentMatrix[[2]])
max(pokemonGoTweetTermDocumentMatrix[[1]])
write.table(matrix(pokemonGoTweetVocabulary,nrow=length(pokemonGoTweetVocabulary),ncol=1,byrow=F),"data/pokemonGO-user-term-matrix-vocabulary.txt",quote=F,row.names=F,col.names=F)
write.table(matrix(pokemonGoTweetVocabulary,nrow=length(pokemonGoTweetVocabulary),ncol=1,byrow=F),"data/comparison-technique-streamingNMF-pokemonGO-user-term-matrix-vocabulary.txt",quote=F,row.names=F,col.names=F)
write.table(matrix(pokemonGoTweetVocabulary,nrow=length(pokemonGoTweetVocabulary),ncol=1,byrow=F),"data/comparison-technique-data-streamingNMF-pokemonGO-user-term-matrix-vocabulary.txt",quote=F,row.names=F,col.names=F)
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/Documents/phd/projects/bend-it-like-benford/tex/data/comparison-technique-data-streamingNMF-pokemonGO-user-term-matrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); }
source('load.R')
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/Documents/phd/projects/bend-it-like-benford/tex/data/comparison-technique-data-streamingNMF-pokemonGO-user-term-matrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); }
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/tmp/pokemonTweetUserTermMatrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); }
pokemonGODF <- read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO.csv")
pokemonTweets <- pokemonGODF[,9]
pokemonGoTweetCorpus <- Corpus(VectorSource(as.character(pokemonTweets)))
pokemonUserTweets <- c(); for(userid in pokemonTweetUserIdsUnique){ tweetIndicesForUser <- which(pokemonTweetUserIds==userid); pokemonUserTweets <- c(pokemonUserTweets, paste(as.character(pokemonTweets[tweetIndicesForUser]),sep=" ",collapse=" "));}
pokemonTweetUserIds <- as.numeric(pokemonGODF[,1])
pokemonTweetUserIdsUnique <- unique(pokemonTweetUserIds)
write.table(matrix(pokemonGoTweetVocabulary,nrow=length(pokemonGoTweetVocabulary),ncol=1,byrow=F),"data/comparison-technique-streamingNMF-pokemonGO-user-term-matrix-vocabulary.txt",quote=F,row.names=F,col.names=F)
for(userIndex in seq_along(pokemonTweetUserIdsUnique)){ userElementIndices <- which(pokemonGoTweetTermDocumentMatrix[[2]]==userIndex); terms <- pokemonGoTweetTermDocumentMatrix[[1]][userElementIndices]; frequencies <- pokemonGoTweetTermDocumentMatrix[[3]][userElementIndices]; userMatrix <- matrix(c(replicate(length(terms),userIndex),terms,frequencies),nrow=length(terms),ncol=3,byrow=F); write.table(userMatrix,"/home/sam/Documents/phd/projects/bend-it-like-benford/tex/data/comparison-technique-data-streamingNMF-pokemonGO-user-term-matrix.txt",append=TRUE,quote=FALSE,sep=" ",row.names=F,col.names=F); }
q()
y
?e.divisive
?ks.test
ks.test
myset <- 1:10
myset
setdiff(myset,c(3,5))
myset
myset[4] <- NULL
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),6)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),2)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),2)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),2)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),3)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),3)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
Xb
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
4>4
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
source('func.R')
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),4)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),5)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),1)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),0)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),5)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),6)
q()
y
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));};
plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); 
plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 1000; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
ksr$statistic
as.numeric(ksr$statistic)
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); benfordnessSignal <- c(); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindowcurrentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
sort(c(2,1,3,5,4))
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); benfordnessSignal <- c(); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); <- timeSeriesVector[w:(w+windowSize - 1)]); ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),6)
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),6)$newWidowSorted
shiftSortedWindow(c(5,4,3,2,1),c(1,2,3,4,5),6)$newWindowSorted
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted;  timeSeriesVector[w:(w+windowSize - 1)]); ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
?ks.test
ks.test
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted;  timeSeriesVector[w:(w+windowSize - 1)]); ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,10); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted;  timeSeriesVector[w:(w+windowSize - 1)]); ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
source('func.R')
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 50; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); benfordnessSignal <- c(); meanSignal <- c(); for(w in windowStarts){ currentWindow <- timeSeriesVector[w:(w+windowSize - 1)]; ksr <- calculateKS(currentWindow); benfordnessSignal <- c(benfordnessSignal,ksr$p.value); meanSignal <- c(meanSignal,mean(currentWindow));}; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (p-value,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(0.05,0,col=8,lty=3,lwd=4);
beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=1000); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(2000,0)*10^(sample(2:(betaNonBenford+1),2000,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
length(timeSeriesVector)
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- prod.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; }; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punif(runif(1000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(1000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(10000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(100000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(200000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(400000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(800000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(1600000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(3200000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); punifResult <- punif(runif(6400000)); timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=1000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=100000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=200000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=400000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=4000000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=40000000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=80000000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=160000000; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=1; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
timeStart <- proc.time(); n=1; punifResult <- punif(runif(n)) - (0:(n - 1))/n; timeEnd <- proc.time(); print(timeEnd-timeStart);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(sortedX) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, calculateKsOneSidedStatisticUniform(currentWindowSorted)); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(timeEnd-timeStart);
(timeEnd-timeStart)$elapsed
(timeEnd-timeStart)
(timeEnd-timeStart)[3]
as.numeric(timeEnd-timeStart)[3]
as.numeric(timeEnd-timeStart)[3]
as.numeric(timeEnd-timeStart)[3]
as.numeric(timeEnd-timeStart)[3]
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
?vector
?numeric
numeric(10)
numeric(10)
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); timeStart <- proc.time(); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[1] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform)); benfordnessSignal[benfordnessSignalIndex] <- }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignal <- c(calculateKsOneSidedStatisticUniform(currentWindowSorted)); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal <- c(benfordnessSignal, ksStatistic); }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 48000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 96000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 2000; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 12000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 24000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 100; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 2000; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 500; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
pokemonKsSignal <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-ks.csv",header=FALSE)); pokemonTimestamps <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-timestamps.csv",header=FALSE)); pokemonStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/7/27"), "days");
pokemonKsSignal <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-ks.csv",header=FALSE)); pokemonTimestamps <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-timestamps.csv",header=FALSE)); pokemonStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/7/27"), "days");
hashtags <- c("PushAwardsLizQuens","VeranoMTV2016","PushAwardsKathNiels","Rio2016","gameinsight","androidgames","android","job","TeenChoice","DemsInPhilly","quote","RNCinCLE","1","NowPlaying","PokemonGO","nsfw","USA","BlackLivesMatter","PushAwardsViceRylleBabies","Hiring","xxx","RT","MGWV","SoundCloud","np","porn","Olympics","win","Periscope","ALDUB1stAnniversary","Trump","Deals","TreCru","jobs","nowplaying","mPLUSRewards","etsy","KCAMexico","porno","giveaway","news","quotes","Travel","Job","mPLUSPlaces","MAGA","BIGOLIVE","hiring","fashion","tcot","Dallas","PokemonGo","Jobs","CareerArc","MUFC","BB18","Trump2016","DNCinPHL","marketing","travel","News","music","TrumpPence16","sex","ChooseLoveTheConcert","AltonSterling","PhilandoCastile","2","etsymntt","WIN","business","Turkey","ImWithHer","TrumpTrain","Jewelry","5SOS","NeverHillary","Giveaway","ebay","FOLLOWTRICK","sogonechallenge","tech","art","jewelry","RETWEET","NeverTrump","love","RAW","DemConvention","competition","Music","viral","TeamUSA","FOLLOW","Follow","3","BTS","F4F","Iran","Necklace","Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
pokemonKsSignal <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-ks.csv",header=FALSE)); pokemonTimestamps <- as.numeric(read.csv("data/stream-2016-07-07-snapshot-2016-07-26-hashtag-PokemonGO-c1-w2000-i100-timestamps.csv",header=FALSE)); pokemonStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/7/27"), "days");
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtags <- c("PushAwardsLizQuens","VeranoMTV2016","PushAwardsKathNiels","Rio2016","gameinsight","androidgames","android","job","TeenChoice","DemsInPhilly","quote","RNCinCLE","1","NowPlaying","PokemonGO","nsfw","USA","BlackLivesMatter","PushAwardsViceRylleBabies","Hiring","xxx","RT","MGWV","SoundCloud","np","porn","Olympics","win","Periscope","ALDUB1stAnniversary","Trump","Deals","TreCru","jobs","nowplaying","mPLUSRewards","etsy","KCAMexico","giveaway","news","quotes","Travel","Job","mPLUSPlaces","MAGA","BIGOLIVE","hiring","fashion","tcot","Dallas","PokemonGo","Jobs","CareerArc","MUFC","BB18","Trump2016","DNCinPHL","marketing","travel","News","music","TrumpPence16","sex","ChooseLoveTheConcert","AltonSterling","PhilandoCastile","2","etsymntt","WIN","business","Turkey","ImWithHer","TrumpTrain","Jewelry","5SOS","NeverHillary","Giveaway","ebay","FOLLOWTRICK","sogonechallenge","tech","art","jewelry","RETWEET","NeverTrump","love","RAW","DemConvention","competition","Music","viral","TeamUSA","FOLLOW","Follow","3","BTS","F4F","Iran","Necklace","Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtags <- c("ChooseLoveTheConcert","AltonSterling","PhilandoCastile","2","etsymntt","WIN","business","Turkey","ImWithHer","TrumpTrain","Jewelry","5SOS","NeverHillary","Giveaway","ebay","FOLLOWTRICK","sogonechallenge","tech","art","jewelry","RETWEET","NeverTrump","love","RAW","DemConvention","competition","Music","viral","TeamUSA","FOLLOW","Follow","3","BTS","F4F","Iran","Necklace","Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
q()
y
y
source('load.R')
source('func.R')
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtags <- c("RETWEET","NeverTrump","love","RAW","DemConvention","competition","Music","viral","TeamUSA","FOLLOW","Follow","3","BTS","F4F","Iran","Necklace","Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtags <- c("Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtags <- c("gameinsight","androidgames","android","DemsInPhilly","RNCinCLE","BlackLivesMatter","Olympics","Turkey","TeamUSA","BTS","HillaryClinton","GOT7","DNC","FamousMelaniaTrumpQuotes","MakeAmericaGreatAgain")
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
hashtag <- "BTS"; c <- 3; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2);
hashtag <- "BTS"; c <- 3; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); which(hashtagKsSignal<0.05)
hashtag <- "BTS"; c <- 3; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); which(hashtagKsSignal<0.05); hashtagTimestamps[which(hashtagKsSignal<0.05)]
myseq <- 1.2^(1:100)
myseqFirstDigits <- getFirstDigits(myseq)
table(myseqFirstDigits)
plot(table(myseqFirstDigits))
hist(table(myseqFirstDigits))
plot(table(myseqFirstDigits))
plot(table(myseqFirstDigits),type="b")
plot(table(myseqFirstDigits),type="b")
?plot
plot(table(myseqFirstDigits),type="h")
plot(table(myseqFirstDigits),type="s")
plot(table(myseqFirstDigits),type="S")
plot(table(myseqFirstDigits),type="s")
matrix(c(),0,9)
matrix(,0,9)
table(myseqFirstDigits)
as.numeric(table(myseqFirstDigits))
source('func.R')
extractDigitHistograms(1:100,10,1)
warnings()
myseqFirstDigits
source('func.R')
extractDigitHistograms(1:100,10,1)
warnings
extractDigitHistograms(1:10,2,1)
as.numeric(table(getFirstDigits(1:5)))
as.numeric(table(c(1:9,getFirstDigits(1:5))))
as.numeric(table(c(1:9,getFirstDigits(1:5))))-1
as.numeric(table(c(1:9,getFirstDigits(1:5))))
source('func.R')
extractDigitHistograms(1:10,2,1)
extractDigitHistograms(1:100,5,2)
write.table(extractDigitHistograms(1:100,5,2),"/home/sam/tmp/dhtext.csv",quote=F,sep=",",row.names=F,col.names=F)
firstTwoDigits <- getTwoSignificantDigits(nonBotEditSizes); benfDensities <- getTwoDigitBenfordDensities(); hist(firstTwoDigits,seq(9.5,100.5,1),main="Wikipedia Change Deltas",xlab=""); points(10:99,benfDensities*length(nonBotEditSizes),pch=20);
firstTwoDigits <- getTwoSignificantDigits(nonBotEditSizes); benfDensities <- getTwoDigitBenfordDensities(); hist(firstTwoDigits,seq(9.5,100.5,1),main="Wikipedia Change Deltas",xlab=""); points(10:99,benfDensities*length(nonBotEditSizes),pch=20,col=replicate(90,"red"));
firstTwoDigits <- getTwoSignificantDigits(nonBotEditSizes); benfDensities <- getTwoDigitBenfordDensities(); hist(firstTwoDigits,seq(9.5,100.5,1),main="Wikipedia Change Deltas",xlab="",col=replicate(90,"red")); points(10:99,benfDensities*length(nonBotEditSizes),pch=20);
firstTwoDigits <- getTwoSignificantDigits(nonBotEditSizes); benfDensities <- getTwoDigitBenfordDensities(); histogramColoring <- replicate(90,"white"); histogramColoring[c(2,13,29,31)] <- "red"; hist(firstTwoDigits,seq(9.5,100.5,1),main="Wikipedia Change Deltas",xlab="",col=histogramColoring); points(10:99,benfDensities*length(nonBotEditSizes),pch=20);
firstTwoDigits <- getTwoSignificantDigits(nonBotEditSizes); benfDensities <- getTwoDigitBenfordDensities(); histogramColoring <- replicate(90,"white"); histogramColoring[c(2,13,29,31)] <- "red"; hist(firstTwoDigits,seq(9.5,100.5,1),main="Wikipedia Change Deltas",xlab="",col=histogramColoring); points(10:99,benfDensities*length(nonBotEditSizes),pch=20);
q()
y
source('load.R
source('load.R')
source('func.R')
extractDigitHistograms(1:100,5,2)
hashtags <- c("PushAwardsLizQuens","VeranoMTV2016","PushAwardsKathNiels","Rio2016","gameinsight","androidgames","android","job","TeenChoice","DemsInPhilly","quote","RNCinCLE","1","NowPlaying","PokemonGO","nsfw","USA","BlackLivesMatter","PushAwardsViceRylleBabies","Hiring","xxx","RT","MGWV","SoundCloud","np","porn","Olympics","win","Periscope","ALDUB1stAnniversary","Trump","Deals","TreCru","jobs","nowplaying","mPLUSRewards","etsy","KCAMexico","porno","giveaway","news","quotes","Travel","Job","mPLUSPlaces","MAGA","BIGOLIVE","hiring","fashion","tcot","Dallas","PokemonGo","Jobs","CareerArc","MUFC","BB18","Trump2016","DNCinPHL","marketing","travel","News","music","TrumpPence16","sex","ChooseLoveTheConcert","AltonSterling","PhilandoCastile","2","etsymntt","WIN","business","Turkey","ImWithHer","TrumpTrain","Jewelry","5SOS","NeverHillary","Giveaway","ebay","FOLLOWTRICK","sogonechallenge","tech","art","jewelry","RETWEET","NeverTrump","love","RAW","DemConvention","competition","Music","viral","TeamUSA","FOLLOW","Follow","3","BTS","F4F","Iran","Necklace","Win","DolceAmoreParanoid","CrookedHillary","photography","FanArmyFaceOff","DolceAmoreHotSeat","ASMSG","ad","listenlive","socialmedia","Gold","PushAwardsJaDines","DNCLeaks","Hillary","savemarinajoyce","PJNET","DolceAmoreBusted","BatonRouge","NFL","DNCleak","MPN","deals","UFC202","amwriting","ChoiceInternationalArtist","DolceAmoreTruth","TeamFollowBack","DolceAmoreAtLast","HillaryClinton","free","KimExposedTaylorParty","DolceAmoreOperation1010","SoGoneChallenge","OneDirection","startup","DolceAmoreParentsTrap","GOT7","DolceAmoreExpose","SuicideSquad","EURO2016","DolceAmoreExdeal","DolceAmoreSabwatan","NP","shopping","DolceAmoreFamilyDay","WWE","GIRLSTALKBOYS","MLB","DolceAmoreTrueFeelings","DolceAmorePatigasan","DNC","DolceAmorePaFall","ALDUBMaineCelebration","KCAColombia","DolceAmoreTheGamePlan","DolceAmorePayback","health","DolceAmoreLostAndFound","Marketing","DolceAmoreSecretNoMore","DolceAmoreSabotage","DolceAmoreConnivance","DolceAmoreTheBigSurprise","FamousMelaniaTrumpQuotes","BREAKING","TheBachelorette","RioOlympics2016","Brexit","DolceAmoreFightingSpirit","DolceAmoreMayForeverBaTalaga","IARTG","OpeningCeremony","MakeAmericaGreatAgain","blacklivesmatter","DolceAmoreChangedMan","entrepreneur","FifthHarmony","handmade","ALDUBImagineYouAndMe","DolceAmorePowerPlay","SummerSlam","LFC","SEO","SDCC","UFC200","Android","Sales","Syria","leadership","ipad","pussy","Throwback1Dreamboy2","Business","LizQuenDayDAAlbumReleaseWW","TBT","DolceAmorePusongBato","FreebieFriday","ccot","NYC")
digitDistributions <- read.csv("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-PushAwardsLizQuens-c1-w2000-i100-digithistograms.csv",header=F)
dim(digitDistributions)
nrow(digitDistributions)
for(i in 
length(seq_along(digitDistributions))
length(seq_along(digitDistributions))
length(seq_len(nrow(digitDistributions)))
seq_len(ncol(digitDistributions))
for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); }
digitDistribution <- as.numeric(digitDistributions[1,])
digitDistribution
plot(1:9,digitDistribution,type="h")
plot(1:9,digitDistribution/sum(digitDistribution),type="h")
for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,digitDistribution/sum(digitDistribution),type="h",main=sprintf("%s: %d",hashtag,c); readline("continue"); };   };  };  };
for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,digitDistribution/sum(digitDistribution),type="h",main=sprintf("%s: %d",hashtag,c); readline("continue"); };   };  };  };};
for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ readline("continue"); };   };  };  };};
for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,digitDistribution/sum(digitDistribution),type="h",main=sprintf("%s %d",hashtag,c)); readline("continue"); };   };  };  };};
benfordProportions <- getBfor(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,digitDistribution/sum(digitDistribution),type="h",main=sprintf("%s %d",hashtag,c)); readline("continue"); };   };  };  };};
pbenf(1)
as.numeric(pbenf(1))
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,abs(benfordProportions - (digitDistribution/sum(digitDistribution))),type="h",main=sprintf("%s %d",hashtag,c)); readline("continue"); };   };  };  };};
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,abs(benfordProportions - (digitDistribution/sum(digitDistribution))),type="h",main=sprintf("%s %d",hashtag,c),ylim=c(0,1)); readline("continue"); };   };  };  };};
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); plot(1:9,abs(benfordProportions - (digitDistribution/sum(digitDistribution))),type="h",main=sprintf("%s %d",hashtag,c),ylim=c(0,1)); };   };  };  };};
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); print(sum(digitDistribution)); plot(1:9,abs(benfordProportions - (digitDistribution/sum(digitDistribution))),type="h",main=sprintf("%s %d",hashtag,c),ylim=c(0,1)); };   };  };  };};
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix()); for(i in seq_len(nrow(digitDistributions))){ digitDistribution <- as.numeric(digitDistributions[i,]); print(sum(digitDistribution)); plot(1:9,abs(benfordProportions - (digitDistribution/sum(digitDistribution))),type="h",main=sprintf("%s %d",hashtag,c),ylim=c(0,1)); };   };  };  };};
rep(benfordProportions,2)
rep(benfordProportions,3)
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- apply(digitDistributions,2,max); print(colMaxes);   };  };  };
hashtags <- c("gameinsight","androidgames","android","DemsInPhilly","RNCinCLE","BlackLivesMatter","Olympics","Turkey","TeamUSA","BTS","HillaryClinton","GOT7","DNC","FamousMelaniaTrumpQuotes","MakeAmericaGreatAgain")
benfordProportions <- as.numeric(pbenf(1)); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- apply(digitDistributions,2,max); print(sprintf("%s %d",hashtag,c)); print(as.numeric(colMaxes));   };  };  };
benfordProportions <- as.numeric(pbenf(1)); deviationLabels <- c(); deviations <- matrix(,); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- apply(digitDistributions,2,max); deviationLabels <- c(deviationLabels,sprintf("%s %d",hashtag,c));  print(as.numeric(colMaxes));   };  };  };
matrix(,)
matrix(,nrow=0,ncol=9)
benfordProportions <- as.numeric(pbenf(1)); deviationLabels <- c(); deviations <- matrix(,nrow=0,ncol=9); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- as.numeric(apply(digitDistributions,2,max)); deviationLabels <- c(deviationLabels,sprintf("%s %d",hashtag,c));  deviations <- rbind(deviations(matrix(colMaxes,nrow=1,ncol=9,byrow=T))); };  };  };
benfordProportions <- as.numeric(pbenf(1)); deviationLabels <- c(); deviations <- matrix(,nrow=0,ncol=9); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- as.numeric(apply(digitDistributions,2,max)); deviationLabels <- c(deviationLabels,sprintf("%s %d",hashtag,c));  deviations <- rbind(deviations,matrix(colMaxes,nrow=1,ncol=9,byrow=T)); };  };  };
dim(deviations)
deviations
apply(deviations,2,max)
deviationLabels[14]
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); hashtagDigitDistributions <- read.csv(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digitdistributions.csv",hashtag,c),header=FALSE); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
benfordProportions <- as.numeric(pbenf(1)); deviationLabels <- c(); deviations <- matrix(,nrow=0,ncol=9); for(hashtag in hashtags){ for(c in 1:5){ filename <- sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c); if(file.exists(filename)){ digitDistributions <- read.csv(filename,header=F); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); colMaxes <- as.numeric(apply(digitDistributions,2,max)); deviationLabels <- c(deviationLabels,sprintf("%s %d",hashtag,c));  deviations <- rbind(deviations,matrix(colMaxes,nrow=1,ncol=9,byrow=T)); };  };  };
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digitdistributions.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit]); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digitdistributions.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit]); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digitdistributions.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit]); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(length(maxDigitDeviationsAndDates)); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(length(maxDigitDeviationsAndDates)); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(length(maxDigitDeviationsAndDates)); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; print(length(maxDigitDeviationsAndDates)); hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,"test"); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
sprintf("%f, %s",maxDeviation,maxDeviationDate)
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(sprintf("%f, %s",maxDeviation,maxDeviationDate)); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; print(length(windowIndexWithMaxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; print(windowIndexWithMaxDeviation); maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; print(maxDeviationTimestamp); maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); print(maxDeviationDate); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ print(digit); maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; print(maxDeviationTimestamp); maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); print(length(maxDigitDeviationsAndDates));}; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
for(hashtag in hashtags){ for(c in 1:5){ hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); }; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");  };}
hashtag <- "HillaryClinton"; c <- 1; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 1:9){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); }; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");
hashtag <- "HillaryClinton"; c <- 1; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 2:2){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); }; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");
maxDeviationTimestamp
windowIndexWithMaxDeviation
digitDistribution <- as.numeric(digitDistributions[47,])
digitDistribution
plot(1:9,digitDistribution,type="h")
hashtag <- "Turkey"; c <- 2; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 2:2){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); }; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");
digitDistribution <- as.numeric(digitDistributions[windowIndexWithMaxDeviation,])
plot(1:9,digitDistribution,type="h")
sum(digitDistribution)
digitDistributions
digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE)
sum(digitDistributions[1,])
sum(digitDistributions[windowIndexWithMaxDeviation,])
hashtag <- "HillaryClinton"; c <- 1; hashtagKsSignal <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-ks.csv",hashtag,c),header=FALSE)); hashtagTimestamps <- as.numeric(read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-timestamps.csv",hashtag,c),header=FALSE)); digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE); digitDistributions <- digitDistributions/2000; digitDistributions <- abs(digitDistributions - matrix(rep(benfordProportions,nrow(digitDistributions)),ncol=9,nrow=nrow(digitDistributions),byrow=T)); maxDigitDeviationsAndDates <- c(); for(digit in 2:2){ maxDeviation <- max(as.numeric(digitDistributions[,digit])); windowIndexWithMaxDeviation <- which(as.numeric(digitDistributions[,digit]) == maxDeviation)[1]; maxDeviationTimestamp <- hashtagTimestamps[windowIndexWithMaxDeviation]; maxDeviationDate <- as.Date(as.POSIXct(maxDeviationTimestamp, origin="1970-01-01",tz="UTC")); maxDigitDeviationsAndDates <- c(maxDigitDeviationsAndDates,sprintf("%f, %s",maxDeviation,maxDeviationDate)); }; hashtagStreamDates <- seq(as.Date("2016/7/6"), as.Date("2016/8/24"), "days"); plot(hashtagTimestamps,hashtagKsSignal,type="l",ylab="Benfordness",xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,ylim=c(0,1),main=sprintf("%s - %d",hashtag,c)); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(hashtagStreamDates,tz="GMT")),labels=format(hashtagStreamDates,"%b %d"),las=2,cex.axis=2); print(maxDigitDeviationsAndDates); readline("key for next...");
digitDistributions <- read.csv(sprintf("data/stream-2016-07-07-snapshot-2016-08-25-hashtag-%s-c%d-w2000-i100-digithistograms.csv",hashtag,c),header=FALSE)
plot(1:9,digitDistributions[windowIndexWithMaxDeviation,],type="h")
plot(1:9,digitDistributions[windowIndexWithMaxDeviation,]/2000,type="h")
plot(1:9,digitDistributions[windowIndexWithMaxDeviation,]/2000,type="h")
points(1:9,pbenf(1))
maxDeviationTimestamp
windowIndexWithMaxDeviation
q()
y
plot(timestamps[windowStart:windowEnd],ksSignal[windowStart:windowEnd],type="l",ylab=sprintf("Benfordness (p-value)"),xlab="",xaxt="n",cex.axis=2,cex.lab=1.5,main="BenFound",cex.main=3); abline(0.05,0,col=8,lty=3,lwd=4); axis(1,at=as.numeric(as.POSIXct(streamDates,tz="GMT")),labels=format(streamDates,"%b %d"),las=2,cex.axis=2); rect(c(1465485779),c(0),c(1465585779),c(1),col=alpha(2,0.5),lwd=0); 
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, tolower)P
pokemonGoTweetCorpus <- tm_map(pokemonGoTweetCorpus, removePunctuation)P
?agglo
help changepoint
?e.cp3o
1.772^(1:10)
1.772^(1:100)
q()
y
q()
y
q()
n
q()
y
q()
y
q()
y
q()
n
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 2000; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
totalLength <- 6000; beta1 <- 10; beta2 <- 10; betaNonBenford <- 10;windowSize <- 250; greenRedGreenColors <- rainbow(3,alpha=0.3); greenRedGreenColors <- c(greenRedGreenColors[2],greenRedGreenColors[1], greenRedGreenColors[2]); set.seed(336); vecU <- seq(0,1,length=totalLength/6); vecM11 <- sample(1:beta1,length(vecU),replace=TRUE); vecM12 <- sample(1:beta2,length(vecU),replace=TRUE); vecM21 <- sample(1:beta1,length(vecU),replace=TRUE); vecM22 <- sample(1:beta2,length(vecU),replace=TRUE); vecB11 <- 10^(vecU+vecM11); vecB12 <- 10^(vecU+vecM12); vecB21 <- 10^(vecU+vecM21); vecB22 <- 10^(vecU+vecM22); perfectBenfordSet11 <- sample(vecB11,length(vecB11)); perfectBenfordSet12 <- sample(vecB12,length(vecB12)); perfectBenfordSet21 <- sample(vecB21,length(vecB21)); perfectBenfordSet22 <- sample(vecB22,length(vecB22)); timeSeriesVector <- c(perfectBenfordSet11, perfectBenfordSet12, runif(totalLength/3,0)*10^(sample(2:(betaNonBenford+1),totalLength/3,replace=TRUE)), perfectBenfordSet21,perfectBenfordSet22); windowStarts <- seq(1,length(timeSeriesVector)-windowSize+1,1); currentWindow <- timeSeriesVector[1:windowSize]; currentWindow <- log(currentWindow, 10)-floor(log(currentWindow,10)); currentWindowSorted <- sort(currentWindow); benfordnessSignalIndex <- 1; benfordnessSignal <- numeric(totalLength-windowSize+1); benfordnessSignal[benfordnessSignalIndex] <- calculateKsOneSidedStatisticUniform(currentWindowSorted); uniformEcdfSteps <- (0:(windowSize - 1))/windowSize; inverseWindowSize <- 1/windowSize; timeStart <- proc.time(); for(newValueIndex in (windowSize+1):length(timeSeriesVector)){ benfordnessSignalIndex <- benfordnessSignalIndex+1; newValue <- timeSeriesVector[newValueIndex]; newValue <- log(newValue, 10)-floor(log(newValue,10)); shiftSortedWindowResult <- shiftSortedWindow(currentWindow,currentWindowSorted,newValue); currentWindow <- shiftSortedWindowResult$newWindowUnsorted; currentWindowSorted <- shiftSortedWindowResult$newWindowSorted; differenceToUniform <- punif(currentWindowSorted) - uniformEcdfSteps; ksStatistic <- max(c(differenceToUniform, inverseWindowSize - differenceToUniform));  benfordnessSignal[benfordnessSignalIndex] <- ksStatistic; }; timeEnd <- proc.time(); plot(seq_along(benfordnessSignal),benfordnessSignal,type="l",main="BenFound (statistic,w=250)",xlab="",xaxt="n",ylab="BenFound (p-value)",cex.main=1.5); abline(1.358/sqrt(windowSize),0,col=8,lty=3,lwd=4); print(totalLength/(as.numeric(timeEnd-timeStart)[3])); 
clean_cache()
clean_cache(clean=TRUE)
clean_cache(clean=TRUE)
q()
y
q()
n
clean_cache(clean=TRUE)
q()
y
clean_cache(clean=TRUE)
q()
n
q()
n
